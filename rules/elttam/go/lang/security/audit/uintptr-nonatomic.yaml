rules:
  - id: non-atomic-use-of-converted-uintptr
    message: >-
      An unsafe.Pointer converted to an uintptr must be used in an atomic step.
      Without this it is not guaranteed that the memory location uintptr points to will contain the intended structure.
    metadata:
      category: security
      subcategory: vuln
      likelihood: MEDIUM
      impact: MEDIUM
      confidence: MEDIUM
      technology:
        - golang
    severity: WARNING
    languages: [go]
    pattern-either:
      - pattern: |
          $UINTPTR := uintptr(unsafe.Pointer( ... ))
          ...
          ... :=  $F(..., $UINTPTR, ...)
      - pattern: |
          $UINTPTR := uintptr($PTR)
          ...
          ... := $F(..., $UINTPTR, ...)
