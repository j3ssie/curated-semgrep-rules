# yamllint disable
# License: Apache 2.0 (c) gosec
# source (original): https://github.com/securego/gosec/blob/master/rules/tempfiles.go
# yamllint enable
---
rules:
- id: "go_filesystem_rule-tempfiles"
  languages:
  - "go"
  patterns:
  - pattern-either:
    - pattern: |
        ioutil.WriteFile("$ARG", ...)
    - pattern: |
        os.Create("$ARG")
  - metavariable-regex:
      metavariable: "$ARG"
      regex: "(/tmp/.*|/var/tmp/.*)"
  message: |
    The application was found creating files in shared system temporary directories
    (`/tmp` or `/var/tmp`) without using the `os.CreateTemp` function. Depending
    on how the application uses this temporary file, an attacker may be able to create
    symlinks that point to other files prior to the application creating or writing
    to the target file, leading to unintended files being created or overwritten.

    Example using `os.CreateTemp` in an application restricted directory:
    ```
    // assumes /opt/appdir/ is chown'd to the running application user
    if err := os.MkdirAll("/opt/appdir/restricted", 0700); err != nil {
      log.Fatal(err)
    }

    // create a temporary file in the restricted directory in the form of temp-952569059.txt
    f, err := os.CreateTemp("/opt/appdir/restricted", "temp-*.txt")
    if err != nil {
      log.Fatal(err)
    }

    defer f.Close()
    // clean up on exit
    defer os.Remove(f.Name())
    // work with file
    ```
  metadata:
    shortDescription: "Creation of temporary file with insecure permissions"
    cwe: "CWE-378"
  severity: "WARNING"
