# yamllint disable
# License: GNU Lesser General Public License v3.0
# source (original): https://github.com/ajinabraham/njsscan/blob/master/njsscan/rules/semantic_grep/jwt/jwt_exposed_credentials.yaml
# hash: e7a0a61
# yamllint enable
---
rules:
- id: "rules_lgpl_javascript_jwt_rule-jwt-exposed-credentials"
  patterns:
  - pattern-either:
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $T = JWT.sign({password:...},...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        var $P = {password:...};
        ...
        var $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        var $P = {password:...};
        ...
        $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P = {password:...};
        ...
        var $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P = {password:...};
        ...
        $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P.password = ...;
        ...
        var $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P.password = ...;
        ...
        $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        var $P = Object.assign(...,{password:...},...)
        ...
        var $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        var $P = Object.assign(...,{password:...},...)
        ...
        $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P = Object.assign(...,{password:...},...)
        ...
        var $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P = Object.assign(...,{password:...},...)
        ...
        $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        var $T = JWT.sign(Object.assign(...,{password:...},...),...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $T = JWT.sign(Object.assign(...,{password:...},...),...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        var $T = JWT.sign({$U:{password:...}},...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $T = JWT.sign({$U:{password:...}},...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        var $P = {$U:{password:...}};
        ...
        var $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        var $P = {$U:{password:...}};
        ...
        $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P = {$U:{password:...}};
        ...
        var $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P = {$U:{password:...}};
        ...
        $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P.$U.password = ...;
        ...
        var $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P.$U.password = ...;
        ...
        $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        var $P = Object.assign(...,{$U:{password:...}},...)
        ...
        var $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        var $P = Object.assign(...,{$U:{password:...}},...)
        ...
        $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P = Object.assign(...,{$U:{password:...}},...)
        ...
        var $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $P = Object.assign(...,{$U:{password:...}},...)
        ...
        $T = JWT.sign($P,...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        var $T = JWT.sign(Object.assign(...,{$U:{password:...}},...),...)
    - pattern: |
        $JOSE = require("jose")
        ...
        var { JWT } = $JOSE;
        ...
        $T = JWT.sign(Object.assign(...,{$U:{password:...}},...),...)
  severity: "ERROR"
  languages:
  - "javascript"
  metadata:
    owasp: "A2:2017-Broken Authentication"
    cwe: "CWE-522: Insufficiently Protected Credentials"
  message: |
    Password is exposed through JWT token payload. This is not encrypted and  the password could be compromised. Do not store passwords in JWT tokens.
