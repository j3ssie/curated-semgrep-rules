# yamllint disable
# License: GNU Lesser General Public License v3.0
# source (original): https://github.com/ajinabraham/njsscan/blob/master/njsscan/rules/semantic_grep/eval/eval_vm_injection.yaml
# hash: e7a0a61
# yamllint enable
---
rules:
- id: "rules_lgpl_javascript_eval_rule-vm-code-injection"
  patterns:
  - pattern-inside: |
      $VM = require('vm')
      ...
  - pattern-either:
    - pattern-inside: |-
        function ($REQ, $RES, ...) {...}
    - pattern-inside: |-
        function $FUNC($REQ, $RES, ...) {...}
    - pattern-inside: |-
        $X = function $FUNC($REQ, $RES, ...) {...}
    - pattern-inside: |-
        var $X = function $FUNC($REQ, $RES, ...) {...};
    - pattern-inside: |-
        $APP.$METHOD(..., function $FUNC($REQ, $RES, ...) {...})
  - pattern-either:
    - pattern: "$VM.runInContext(<... $REQ.$QUERY.$FOO ...>,...)"
    - pattern: "$VM.runInContext(<... $REQ.$BODY ...>,...)"
    - pattern: |
        $INPUT = <... $REQ.$QUERY.$FOO ...>;
        ...
        $VM.runInContext($INPUT,...)
    - pattern: |
        $INPUT = <... $REQ.$BODY ...>;
        ...
        $VM.runInContext($INPUT,...)
    - pattern: "$VM.runInNewContext(<... $REQ.$QUERY.$FOO ...>,...)"
    - pattern: "$VM.runInNewContext(<... $REQ.$BODY ...>,...)"
    - pattern: |
        $INPUT = <... $REQ.$QUERY.$FOO ...>;
        ...
        $VM.runInNewContext($INPUT,...)
    - pattern: |
        $INPUT = <... $REQ.$BODY ...>;
        ...
        $VM.runInNewContext($INPUT,...)
    - pattern: "$VM.runInThisContext(<... $REQ.$QUERY.$FOO ...>,...)"
    - pattern: "$VM.runInThisContext(<... $REQ.$BODY ...>,...)"
    - pattern: |
        $INPUT = <... $REQ.$QUERY.$FOO ...>;
        ...
        $VM.runInThisContext($INPUT,...)
    - pattern: |
        $INPUT = <... $REQ.$BODY ...>;
        ...
        $VM.runInThisContext($INPUT,...)
    - pattern: "$VM.compileFunction(<... $REQ.$QUERY.$FOO ...>,...)"
    - pattern: "$VM.compileFunction(<... $REQ.$BODY ...>,...)"
    - pattern: |
        $INPUT = <... $REQ.$QUERY.$FOO ...>;
        ...
        $VM.compileFunction($INPUT,...)
    - pattern: |
        $INPUT = <... $REQ.$BODY ...>;
        ...
        $VM.compileFunction($INPUT,...)
    - pattern: "new $VM.Script(<... $REQ.$QUERY.$FOO ...>,...)"
    - pattern: "new $VM.Script(<... $REQ.$BODY ...>,...)"
    - pattern: |
        $INPUT = <... $REQ.$QUERY.$FOO ...>;
        ...
        new $VM.Script($INPUT,...)
    - pattern: |
        $INPUT = <... $REQ.$BODY ...>;
        ...
        new $VM.Script($INPUT,...)
  message: |
    Untrusted user input reaching `vm` can result in code injection.
  severity: "ERROR"
  languages:
  - "javascript"
  metadata:
    owasp: "A1:2017-Injection"
    cwe: "CWE-94: Improper Control of Generation of Code (Code Injection)"
