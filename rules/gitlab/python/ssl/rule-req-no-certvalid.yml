# yamllint disable
# License: MIT (c) GitLab Inc.
# yamllint enable
---
rules:
- id: "python_ssl_rule-req-no-certvalid"
  languages:
  - "python"
  message: |
    The application was found using the `requests` module without configuring a timeout value for
    connections. The `verify=False` argument has been set, which effectively disables the
    validation
    of server certificates.

    This allows for an adversary who is in between the application and the target host to intercept
    potentially sensitive information or transmit malicious data.

    To remediate this issue either remove the `verify=False` argument, or set `verify=True`to each
    `requests` call.

    Example verifying server certificates for an HTTP GET request:
    ```
    # Issue a GET request to https://example.com with a timeout of 10 seconds and verify the
    # server certificate explicitly.
    response = requests.get('https://example.com', timeout=10, verify=True)
    # Work with the response object
    # ...
    ```

    For more information on using the requests module see:
    - https://requests.readthedocs.io/en/latest/api/
  metadata:
    cwe: "CWE-295"
    owasp: "A3:2017-Sensitive Data Exposure"
    category: "security"
    shortDescription: "Improper certificate validation"
  patterns:
  - pattern-either:
    - pattern: "requests.put(..., verify=False, ...)"
    - pattern: "requests.patch(..., verify=False, ...)"
    - pattern: "requests.delete(..., verify=False, ...)"
    - pattern: "requests.head(..., verify=False, ...)"
    - pattern: "requests.options(..., verify=False, ...)"
    - pattern: "requests.request(..., verify=False, ...)"
    - pattern: "requests.get(..., verify=False, ...)"
    - pattern: "requests.post(..., verify=False, ...)"
  severity: "ERROR"
