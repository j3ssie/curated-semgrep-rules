# yamllint disable
# License: MIT (c) GitLab Inc.
# yamllint enable
---
rules:
- id: "javascript_pathtraversal_rule-non-literal-fs-filename"
  languages:
  - "typescript"
  - "javascript"
  patterns:
  - pattern-either:
    - pattern-inside: |
        import $MOD from $IMP
        ...
    - pattern-inside: |
        $MOD = require($IMP)
        ...
  - metavariable-comparison:
      metavariable: "$IMP"
      comparison: "$IMP in ['fs', 'node:fs', 'fs/promises', 'node:fs/promises', 'fs-extra']"
  - pattern-not: "$MOD.appendFile(\"...\", ...)"
  - pattern-not: "$MOD.appendFileSync(\"...\", ...)"
  - pattern-not: "$MOD.chmod(\"...\", ...)"
  - pattern-not: "$MOD.chmodSync(\"...\", ...)"
  - pattern-not: "$MOD.chown(\"...\", ...)"
  - pattern-not: "$MOD.chownSync(\"...\", ...)"
  - pattern-not: "$MOD.createReadStream(\"...\", ...)"
  - pattern-not: "$MOD.createWriteStream(\"...\", ...)"
  - pattern-not: "$MOD.exists(\"...\", ...)"
  - pattern-not: "$MOD.existsSync(\"...\", ...)"
  - pattern-not: "$MOD.lchmod(\"...\", ...)"
  - pattern-not: "$MOD.lchmodSync(\"...\", ...)"
  - pattern-not: "$MOD.lchown(\"...\", ...)"
  - pattern-not: "$MOD.lchownSync(\"...\", ...)"
  - pattern-not: "$MOD.link(\"...\", \"...\", ...)"
  - pattern-not: "$MOD.linkSync(\"...\", \"...\", ...)"
  - pattern-not: "$MOD.lstat(\"...\", ...)"
  - pattern-not: "$MOD.lstatSync(\"...\", ...)"
  - pattern-not: "$MOD.mkdir(\"...\", ...)"
  - pattern-not: "$MOD.mkdirSync(\"...\", ...)"
  - pattern-not: "$MOD.open(\"...\", ...)"
  - pattern-not: "$MOD.openSync(\"...\", ...)"
  - pattern-not: "$MOD.readdir(\"...\", ...)"
  - pattern-not: "$MOD.readdirSync(\"...\", ...)"
  - pattern-not: "$MOD.readFile(\"...\", ...)"
  - pattern-not: "$MOD.readFileSync(\"...\", ...)"
  - pattern-not: "$MOD.readlink(\"...\", ...)"
  - pattern-not: "$MOD.readlinkSync(\"...\", ...)"
  - pattern-not: "$MOD.realpath(\"...\", ...)"
  - pattern-not: "$MOD.realpathSync(\"...\", ...)"
  - pattern-not: "$MOD.rename(\"...\", \"...\", ...)"
  - pattern-not: "$MOD.renameSync(\"...\", \"...\", ...)"
  - pattern-not: "$MOD.rmdir(\"...\", ...)"
  - pattern-not: "$MOD.rmdirSync(\"...\", ...)"
  - pattern-not: "$MOD.stat(\"...\", ...)"
  - pattern-not: "$MOD.statSync(\"...\", ...)"
  - pattern-not: "$MOD.symlink(\"...\", \"...\", ...)"
  - pattern-not: "$MOD.symlinkSync(\"...\", \"...\", ...)"
  - pattern-not: "$MOD.truncate(\"...\", ...)"
  - pattern-not: "$MOD.truncateSync(\"...\", ...)"
  - pattern-not: "$MOD.unlink(\"...\", ...)"
  - pattern-not: "$MOD.unlinkSync(\"...\", ...)"
  - pattern-not: "$MOD.unwatchFile(\"...\", ...)"
  - pattern-not: "$MOD.utimes(\"...\", ...)"
  - pattern-not: "$MOD.utimesSync(\"...\", ...)"
  - pattern-not: "$MOD.watch(\"...\", ...)"
  - pattern-not: "$MOD.watchFile(\"...\", ...)"
  - pattern-not: "$MOD.writeFile(\"...\", ...)"
  - pattern-not: "$MOD.writeFileSync(\"...\", ...)"
  - pattern-either:
    - pattern: "$MOD.appendFile(...)"
    - pattern: "$MOD.appendFileSync(...)"
    - pattern: "$MOD.chmod(...)"
    - pattern: "$MOD.chmodSync(...)"
    - pattern: "$MOD.chown(...)"
    - pattern: "$MOD.chownSync(...)"
    - pattern: "$MOD.createReadStream(...)"
    - pattern: "$MOD.createWriteStream(...)"
    - pattern: "$MOD.exists(...)"
    - pattern: "$MOD.existsSync(...)"
    - pattern: "$MOD.lchmod(...)"
    - pattern: "$MOD.lchmodSync(...)"
    - pattern: "$MOD.lchown(...)"
    - pattern: "$MOD.lchownSync(...)"
    - pattern: "$MOD.link(...)"
    - pattern: "$MOD.linkSync(...)"
    - pattern: "$MOD.lstat(...)"
    - pattern: "$MOD.lstatSync(...)"
    - pattern: "$MOD.mkdir(...)"
    - pattern: "$MOD.mkdirSync(...)"
    - pattern: "$MOD.open(...)"
    - pattern: "$MOD.openSync(...)"
    - pattern: "$MOD.readdir(...)"
    - pattern: "$MOD.readdirSync(...)"
    - pattern: "$MOD.readFile(...)"
    - pattern: "$MOD.readFileSync(...)"
    - pattern: "$MOD.readlink(...)"
    - pattern: "$MOD.readlinkSync(...)"
    - pattern: "$MOD.realpath(...)"
    - pattern: "$MOD.realpathSync(...)"
    - pattern: "$MOD.rename(...)"
    - pattern: "$MOD.renameSync(...)"
    - pattern: "$MOD.rmdir(...)"
    - pattern: "$MOD.rmdirSync(...)"
    - pattern: "$MOD.stat(...)"
    - pattern: "$MOD.statSync(...)"
    - pattern: "$MOD.symlink(...)"
    - pattern: "$MOD.symlinkSync(...)"
    - pattern: "$MOD.truncate(...)"
    - pattern: "$MOD.truncateSync(...)"
    - pattern: "$MOD.unlink(...)"
    - pattern: "$MOD.unlinkSync(...)"
    - pattern: "$MOD.unwatchFile(...)"
    - pattern: "$MOD.utimes(...)"
    - pattern: "$MOD.utimesSync(...)"
    - pattern: "$MOD.watch(...)"
    - pattern: "$MOD.watchFile(...)"
    - pattern: "$MOD.writeFile(...)"
    - pattern: "$MOD.writeFileSync(...)"
  severity: "WARNING"
  message: |
    The application dynamically constructs file or path information. If the path
    information comes from user-supplied input, it could be abused to read sensitive files,
    access other users' data, or aid in exploitation to gain further system access.

    User input should never be used in constructing paths or files for interacting
    with the filesystem. This includes filenames supplied by user uploads or downloads.
    If possible, consider hashing user input or using unique values and
    use `path.normalize` to resolve and validate the path information
    prior to processing any file functionality.

    Example using `path.normalize` and not allowing direct user input:
    ```
    // User input, saved only as a reference
    // id is a randomly generated UUID to be used as the filename
    const userData = {userFilename: userSuppliedFilename, id: crypto.randomUUID()};
    // Restrict all file processing to this directory only
    const basePath = '/app/restricted/';

    // Create the full path, but only use our random generated id as the filename
    const joinedPath = path.join(basePath, userData.id);
    // Normalize path, removing any '..'
    const fullPath = path.normalize(joinedPath);
    // Verify the fullPath is contained within our basePath
    if (!fullPath.startsWith(basePath)) {
        console.log("Invalid path specified!");
    }
    // Process / work with file
    // ...
    ```

    For more information on path traversal issues see OWASP:
    https://owasp.org/www-community/attacks/Path_Traversal
  metadata:
    cwe: "CWE-22"
    shortDescription: "Improper limitation of a pathname to a restricted directory
      ('Path Traversal')"
    category: "security"
