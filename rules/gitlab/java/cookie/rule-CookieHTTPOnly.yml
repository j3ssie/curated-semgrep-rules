# yamllint disable
# License: MIT (c) GitLab Inc.
# yamllint enable
---
rules:
- id: "java_cookie_rule-CookieHTTPOnly"
  languages:
  - "java"
  patterns:
  - pattern: |
      $X.servlet.http.Cookie $C = new $X.servlet.http.Cookie(..., ...);
      ...
      ($X.servlet.http.HttpServletResponse $RESP).addCookie($C);
  - pattern-not-inside: |
      $X.servlet.http.Cookie $C = new $X.servlet.http.Cookie(..., ...);
      ...
      $C.setHttpOnly(true);
      ...
      ($X.servlet.http.HttpServletResponse $RESP).addCookie($C);
  message: |
    The `HttpOnly` attribute when set to `true` protects the cookie value from being accessed by
    client side JavaScript such
    as reading the `document.cookie` values. By enabling this protection, a website that is
    vulnerable to
    Cross-Site Scripting (XSS) will be able to block malicious scripts from accessing the cookie
    value from JavaScript.

    Example of protecting a `Cookie`:
    ```
    // Create an HttpOnly cookie.
    Cookie someCookie = new Cookie("SomeCookieName", "SomeValue");
    // Set HttpOnly flag to true
    someCookie.setHttpOnly(true);
    ```

    For more information see:
    https://jakarta.ee/specifications/servlet/4.0/apidocs/javax/servlet/http/cookie#setHttpOnly-boolean-

    Session cookies should be configured with the following security directives:

    - [HTTPOnly](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)
    - [Secure](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)
    - [SameSite](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite)
  severity: "WARNING"
  metadata:
    shortDescription: "Sensitive cookie without 'HttpOnly' flag"
    category: "security"
    cwe: "CWE-1004"
    technology:
    - "java"
